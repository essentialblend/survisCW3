define({ entries : {
    "10.1016/j.cag.2014.12.001": {
        "abstract": "We propose a new method for incremental construction of Bounding Volume Hierarchies (BVHs). Despite the wide belief that the incremental construction of BVH is inefficient we show that our method incrementally constructs a BVH with quality comparable to the best SAH builders. We illustrate the versatility of the proposed method using a flexible parallelization scheme that opens new possibilities for combining different BVH construction heuristics. We demonstrate the usage of the method in a proof-of-concept application for real-time preview of data streamed over the network. We believe that our method will renew the interest in incremental BVH construction and it will find its applications in ray tracing based remote visualizations and fast previews or in interactive scene editing applications handling very large data sets. Graphical abstractDisplay Omitted HighlightsWe propose a method for incremental BVH construction.The method debunks the myth of incremental BVH construction being inefficient.We propose two parallelization schemes of the incremental construction. We show test application for ray tracing streaming data.We evaluate the method and discuss its applications.",
        "author": "Bittner, Ji\\v{r}\\'{\\i} and Hapala, Michal and Havran, Vlastimil",
        "doi": "10.1016/j.cag.2014.12.001",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Application, type: Software, type: Off-line, Acceleration Structures",
        "number": "14",
        "pages": "135-144",
        "publisher": "Pergamon Press, Inc.",
        "series": "CGF",
        "title": "Incremental BVH Construction for Ray Tracing",
        "type": "article",
        "url": "https://doi.org/10.1016/j.cag.2014.12.001",
        "volume": "47",
        "year": "2015"
    },
    "10.1111/cgf.12581": {
        "abstract": "We propose a method for creating a bounding volume hierarchy BVH that is optimized for all frames of a given animated scene. The method is based on a novel extension of surface area heuristic to temporal domain T-SAH. We perform iterative BVH optimization using T-SAH and create a single BVH accounting for scene geometry distribution at different frames of the animation. Having a single optimized BVH for the whole animation makes our method extremely easy to integrate to any application using BVHs, limiting the per-frame overhead only to refitting the bounding volumes. We evaluated the T-SAH optimized BVHs in the scope of real-time GPU ray tracing. We demonstrate, that our method can handle even highly complex inputs with large deformations and significant topology changes. The results show, that in a vast majority of tested scenes our method provides significantly better run-time performance than traditional SAH and also better performance than GPU based per-frame BVH rebuild.",
        "author": "Bittner, J. and Meister, D.",
        "doi": "10.1111/cgf.12581",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Software, type: Real-time, GPU, Surface Area Heuristics, Temporal",
        "number": "23",
        "pages": "527-536",
        "publisher": "The Eurographs Association & John Wiley & Sons, Ltd.",
        "series": "SIRT",
        "title": "T-SAH: Animation Optimized Bounding Volume Hierarchies",
        "type": "article",
        "url": "https://doi.org/10.1111/cgf.12581",
        "volume": "34",
        "year": "2015"
    },
    "10.1111:j.1467-8659.2006.00970.x": {
        "abstract": " We present a novel algorithm to compute cache-efficient layouts of bounding volume hierarchies (BVHs) of polygonal models. Our approach does not make any assumptions about the cache parameters or block sizes of the memory hierarchy. We introduce a new probabilistic model to predict the runtime access patterns of a BVH. Our layout computation algorithm utilizes parent-child and spatial localities between the accessed nodes to reduce both the number of cache misses and the size of the working set. Our algorithm also works well for spatial partitioning hierarchies including kd-trees. We use our algorithm to compute layouts of BVHs and spatial partitioning hierarchies of large models composed of millions of triangles. We compare our cache-efficient layouts with other layouts in the context of collision detection and ray tracing. In our benchmarks, our layouts consistently show better performance over other layouts and improve the performance of these applications by 26 to 300 percent without any modification of the underlying algorithms or runtime applications.",
        "author": "Yoon, Sung-Eui and Manocha, Dinesh",
        "doi": "10.1111/j.1467-8659.2006.00970.x",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Acceleration Structures",
        "number": "27",
        "pages": "13-20",
        "publisher": "The Eurographics Association and Blackwell Publishing, Inc",
        "series": "HPG15",
        "title": "Cache-Efficient Layouts of Bounding Volume Hierarchies",
        "type": "article",
        "url": "http://dx.doi.org/10.1111/j.1467-8659.2006.00970.x",
        "volume": "",
        "year": "2006"
    },
    "10.1145/2018323.2018333": {
        "abstract": "A recently developed algorithm called Hierachical Linear Bounding Volume Hierarchies (HLBVH) has demonstrated the feasibility of reconstructing the spatial index needed for ray tracing in real-time, even in the presence of millions of fully dynamic triangles. In this work we present a simpler and faster variant of HLBVH, where all the complex book-keeping of prefix sums, compaction and partial breadth-first tree traversal needed for spatial partitioning has been replaced with an elegant pipeline built on top of efficient work queues and binary search. The new algorithm is both faster and more memory efficient, removing the need for temporary storage of geometry data for intermediate computations. Finally, the same pipeline has been extended to parallelize the construction of the top-level SAH optimized tree on the GPU, eliminating round-trips to the CPU, accelerating the overall construction speed by a factor of 5 to 10x.",
        "author": "Garanzha, Kirill and Pantaleoni, Jacopo and McAllister, David",
        "doi": "10.1145/2018323.2018333",
        "journal": "Proceedings of the Conference on High Performance Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Acceleration Structures, Surface Area Heuristics, HLBVH",
        "number": "17",
        "pages": "59-64",
        "publisher": "Association for Computing Machinery",
        "series": "HPG",
        "title": "Simpler and Faster HLBVH with Work Queues",
        "type": "inproceedings",
        "url": "https://doi.org/10.1145/2018323.2018333",
        "volume": "",
        "year": "2011"
    },
    "10.1145/2159616.2159655": {
        "abstract": "The ray tracing algorithm is known primarily for producing highly realistic images, but also for its high computational cost. Perhaps the most effective method for accelerating ray tracing is through the use of spatial index structures, such as kd-trees and bounding volume hierarchies. In highly dynamic scenarios, these structures must be rebuilt frequently, constituting a considerable portion of the total time to image.",
        "author": "Doyle, Michael J. and Fowler, Colin and Manzke, Michael",
        "doi": "10.1145/2159616.2159655",
        "journal": "Proceedings of the Symposium on Interactive 3D Graphics and Games",
        "keywords": "type: Computational Optimization, type: Hardware, type: Real-time, Acceleration Structures, kd-trees, GPU",
        "number": "30",
        "pages": "51-61",
        "publisher": "Association for Computing Machinery",
        "series": "I3D12",
        "title": "Hardware Accelerated Construction of SAH-Based Bounding Volume Hierarchies for Interactive Ray Tracing",
        "type": "inproceedings",
        "url": "https://doi.org/10.1145/2159616.2159655",
        "volume": "",
        "year": "2012"
    },
    "10.1145/2461912.2462025": {
        "abstract": "Ray-tracing algorithms are known for producing highly realistic images, but at a significant computational cost. For this reason, a large body of research exists on various techniques for accelerating these costly algorithms. One approach to achieving superior performance which has received comparatively little attention is the design of specialised ray-tracing hardware. The research that does exist on this topic has consistently demonstrated that significant performance and efficiency gains can be achieved with dedicated microarchitectures. However, previous work on hardware ray-tracing has focused almost entirely on the traversal and intersection aspects of the pipeline. As a result, the critical aspect of the management and construction of acceleration data-structures remains largely absent from the hardware literature.We propose that a specialised microarchitecture for this purpose could achieve considerable performance and efficiency improvements over programmable platforms. To this end, we have developed the first dedicated microarchitecture for the construction of binned SAH BVHs. Cycle-accurate simulations show that our design achieves significant improvements in raw performance and in the bandwidth required for construction, as well as large efficiency gains in terms of performance per clock and die area compared to manycore implementations. We conclude that such a design would be useful in the context of a heterogeneous graphics processor, and may help future graphics processor designs to reduce predicted technology-imposed utilisation limits.",
        "author": "Doyle, Michael J. and Fowler, Colin and Manzke, Michael",
        "doi": "10.1145/2461912.2462025",
        "journal": "ACM Transactions on Graphics",
        "keywords": "type: Microarchitecture, type: Hardware, GPU, Acceleration Structures, Surface Area Heuristics",
        "number": "31",
        "pages": "51-61",
        "publisher": "Association for Computing Machinery",
        "series": "I3D12",
        "title": "A Hardware Unit for Fast SAH-Optimised BVH Construction",
        "type": "article",
        "url": "https://doi.org/10.1145/2461912.2462025",
        "volume": "32",
        "year": "2013"
    },
    "10.1145/2492045.2492054": {
        "abstract": "We introduce Approximate Agglomerative Clustering (AAC), an efficient, easily parallelizable algorithm for generating high-quality bounding volume hierarchies using agglomerative clustering. The main idea of AAC is to compute an approximation to the true greedy agglomerative clustering solution by restricting the set of candidates inspected when identifying neighboring geometry in the scene. The result is a simple algorithm that often produces higher quality hierarchies (in terms of subsequent ray tracing cost) than a full sweep SAH build yet executes in less time than the widely used top-down, approximate SAH build algorithm based on binning.",
        "author": "Gu, Yan and He, Yong and Fatahalian, Kayvon and Blelloch, Guy",
        "doi": "10.1145/2492045.2492054",
        "journal": "Proceedings of the Conference on High-Performance Graphics Conference",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures, Surface Area Heuristics",
        "number": "11",
        "pages": "81-88",
        "publisher": "Association for Computing Machinery",
        "series": "HPG",
        "title": "Efficient BVH Construction via Approximate Agglomerative Clustering",
        "type": "inproceedings",
        "url": "https://doi.org/10.1145/2492045.2492054",
        "volume": "",
        "year": "2013"
    },
    "10.1145/2492045.2492055": {
        "abstract": "We propose a new massively parallel algorithm for constructing high-quality bounding volume hierarchies (BVHs) for ray tracing. The algorithm is based on modifying an existing BVH to improve its quality, and executes in linear time at a rate of almost 40M triangles/sec on NVIDIA GTX Titan. We also propose an improved approach for parallel splitting of triangles prior to tree construction. Averaged over 20 test scenes, the resulting trees offer over 90 percent of the ray tracing performance of the best offline construction method (SBVH), while previous fast GPU algorithms offer only about 50 percent. Compared to state-of-the-art, our method offers a significant improvement in the majority of practical workloads that need to construct the BVH for each frame. On the average, it gives the best overall performance when tracing between 7 million and 60 billion rays per frame. This covers most interactive applications, product and architectural design, and even movie rendering.",
        "author": "Karras, Tero and Aila, Timo",
        "doi": "10.1145/2492045.2492055",
        "journal": "Proceedings of the Conference on High Performance Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures, GPU, Surface Area Heuristics",
        "number": "25",
        "pages": "89-99",
        "publisher": "Association for Computing Machinery",
        "series": "HPG13",
        "title": "Fast Parallel Construction of High-Quality Bounding Volume Hierarchies",
        "type": "inproceedings",
        "url": "https://doi.org/10.1145/2492045.2492055",
        "volume": "37",
        "year": "2013"
    },
    "10.1145/2790060.2790065": {
        "abstract": "In this paper, we present a new method for building high-quality bounding volume hierarchies (BVHs) on manycore systems. Our method is an extension of the current state-of-the-art on GPU BVH construction, Treelet Restructuring Bounding Volume Hierarchy (TRBVH), and consists of optimizing an already existing tree by rearranging subsets of its nodes using a bottom-up agglomerative clustering approach. We implemented our solution for the NVIDIA Kepler architecture using CUDA and tested it on 16 distinct scenes, most of which are commonly used to evaluate the performance of acceleration structures. We show that our implementation is capable of producing trees whose quality is on par with the ones generated by TRBVH for those scenes, while being about 30 percent faster to do so.",
        "author": "Domingues, Leonardo R. and Pedrini, Helio",
        "doi": "10.1145/2790060.2790065",
        "journal": "Proceedings of the Conference on High Performance Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures, GPU, TRBVH, Surface Area Heuristics",
        "number": "26",
        "pages": "13-20",
        "publisher": "Association for Computing Machinery",
        "series": "HPG15",
        "title": "Bounding Volume Hierarchy Optimization through Agglomerative Treelet Restructuring",
        "type": "inproceedings",
        "url": "https://doi.org/10.1145/2790060.2790065",
        "volume": "",
        "year": "2015"
    },
    "10.1145/3105762.3105782": {
        "abstract": "We propose an extension to the Morton codes used for spatial sorting of scene primitives. The extended Morton codes increase the coherency of the clusters resulting from the object sorting and work better for non-uniform distribution of scene primitives. In particular, our codes are enhanced by encoding the size of the objects, applying adaptive ordering of the code bits, and using variable bit counts for different dimensions. We use these codes for constructing Bounding Volume Hierarchies (BVH) and show that the extended Morton code leads to higher quality BVH, particularly for the fastest available BVH build algorithms that heavily rely on spatial coherence of Morton code sorting. In turn, our method allows to achieve up to 54 percent improvement in the BVH quality especially for scenes with a non-uniform spatial extent and varying object sizes. Our method is easy to implement into any Morton code based build algorithm as it involves only a modification of the Morton code computation step.",
        "author": "Vinkler, Marek and Bittner, J. and Havran, Vlastimil",
        "doi": "10.1145/3105762.3105782",
        "journal": "Proceedings of the Conference on High Performance Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures",
        "number": "21",
        "pages": "",
        "publisher": "Association for Computing Machinery",
        "series": "HPG17",
        "title": "Extended Morton Codes for High Performance Bounding Volume Hierarchy Construction",
        "type": "inproceedings",
        "url": "https://doi.org/10.1145/3105762.3105782",
        "volume": "",
        "year": "2017"
    },
    "10.5555/1921479.1921493": {
        "abstract": "We present HLBVH and SAH-optimized HLBVH, two high performance BVH construction algorithms targeting real-time ray tracing of dynamic geometry. HLBVH provides a novel hierarchical formulation of the LBVH algorithm [LGS*09] and SAH-optimized HLBVH uses a new combination of HLBVH and the greedy surface area heuristic algorithm. These algorithms minimize work and memory bandwidth usage by extracting and exploiting coarse-grained spatial coherence already available in the input meshes. As such, they are well-suited for sorting dynamic geometry, in which the mesh to be sorted at a given time step can be defined as a transformation of a mesh that has been already sorted at the previous time step. Our algorithms always perform full resorting, unlike previous approaches based on refitting. As a result they remain efficient even during chaotic and discontinuous transformations, such as fracture or explosion.",
        "author": "Pantaleoni, Jacopo and Luebke, David",
        "doi": "10.2312/EGGH/HPG10/087-095",
        "journal": "Proceedings of the Conference on High Performance Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures, Surface Area Heuristics",
        "number": "16",
        "pages": "87-95",
        "publisher": "The Eurographics Association",
        "series": "HPG",
        "title": "HLBVH: Hierarchical LBVH Construction for Real-Time Ray Tracing of Dynamic Geometry",
        "type": "inproceedings",
        "url": "http://dx.doi.org/10.2312/EGGH/HPG10/087-095",
        "volume": "",
        "year": "2010"
    },
    "10.5555/2383795.2383801": {
        "abstract": "A number of methods for constructing bounding volume hierarchies and point-based octrees on the GPU are based on the idea of ordering primitives along a space-filling curve. A major shortcoming with these methods is that they construct levels of the tree sequentially, which limits the amount of parallelism that they can achieve. We present a novel approach that improves scalability by constructing the entire tree in parallel. Our main contribution is an in-place algorithm for constructing binary radix trees, which we use as a building block for other types of trees.",
        "author": "Karras, Tero",
        "doi": "10.2312/EGGH/HPG12/033-037",
        "journal": "Proceedings of the Conference on High Performance Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, GPU, Parallelism, Bottom-Up Construction, Acceleration Structures",
        "number": "18",
        "pages": "33-37",
        "publisher": "Eurographics Association",
        "series": "HPG",
        "title": "Maximizing Parallelism in the Construction of BVHs, Octrees, and k-d Trees",
        "type": "inproceedings",
        "url": "https://dl.acm.org/doi/10.5555/2383795.2383801",
        "volume": "",
        "year": "2012"
    },
    "4634624": {
        "abstract": "Current top-down algorithms for constructing bounding volume hierarchies (BVHs) using the surface area heuristic (SAH) rely on an estimate of the cost of the potential subtrees to determine how to partition the primitives. After a tree has been fully built, however, the true cost value at each node can be computed. We present two related algorithms that use this information to reduce the treepsilas total cost through a series of local adjustments (tree rotations) to its structure. The first algorithm uses a fast and simple hill climbing method and the second uses simulated annealing to obtain greater improvements by avoiding local minima. Both algorithms are easy to add to existing BVH implementations and are suitable for preprocessing static geometry for interactive ray tracing.",
        "author": "Kensler, Andrew",
        "doi": "10.1109/RT.2008.4634624",
        "journal": "IEEE Symposium on Interactive Ray Tracing",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Top-Down Construction, Surface Area Heuristics, Tree Data Structures, Acceleration Structures",
        "number": "22",
        "pages": "73-76",
        "publisher": "IEEE",
        "series": "SIRT",
        "title": "Tree rotations for improving bounding volume hierarchies",
        "type": "INPROCEEDINGS",
        "url": "https://ieeexplore.ieee.org/document/4634624",
        "volume": "",
        "year": "2008"
    },
    "4634626": {
        "abstract": "Hierarchical representations of large data sets, such as binary cluster trees, are a crucial component in many scalable algorithms used in various fields. Two major approaches for building these trees are agglomerative, or bottom-up, clustering and divisive, or top-down, clustering. The agglomerative approach offers some real advantages such as more flexible clustering and often produces higher quality trees, but has been little used in graphics because it is frequently assumed to be prohibitively expensive (O(N 2 ) or worse). In this paper we show that agglomerative clustering can be done efficiently even for very large data sets. We introduce a novel locally-ordered algorithm that is faster than traditional heap-based agglomerative clustering and show that the complexity of the tree build time is much closer to linear than quadratic. We also evaluate the quality of the agglomerative clustering trees compared to the best known divisive clustering strategies in two sample applications: bounding volume hierarchies for ray tracing and light trees in the Lightcuts rendering algorithm. Tree quality is highly application, data set, and dissimilarity function specific. In our experiments the agglomerative-built tree quality is consistently higher by margins ranging from slight to significant, with up to 35 percent reduction in tree query times.",
        "author": "Walter, Bruce and Bala, Kavita and Kulkarni, Milind and Pingali, Keshav",
        "doi": "10.1109/RT.2008.4634626",
        "journal": "2008 IEEE Symposium on Interactive Ray Tracing",
        "keywords": "type: Computational Optimization, type: Software, Bottom-Up Construction, Surface Area Heuristics, Acceleration Structures, Tree Data Structures",
        "number": "10",
        "pages": "81-86",
        "publisher": "IEEE",
        "series": "SIRT",
        "title": "Fast agglomerative clustering for rendering",
        "type": "INPROCEEDINGS",
        "url": "https://ieeexplore.ieee.org/document/4634626",
        "volume": "",
        "year": "2008"
    },
    "7857089": {
        "abstract": "We propose a novel massively parallel construction algorithm for Bounding Volume Hierarchies (BVHs) based on locally-ordered agglomerative clustering. Our method builds the BVH iteratively from bottom to top by merging a batch of cluster pairs in each iteration. To efficiently find the neighboring clusters, we keep the clusters ordered along the Morton curve. This ordering allows us to identify approximate nearest neighbors very efficiently and in parallel. We implemented our algorithm in CUDA and evaluated it in the context of GPU ray tracing. For complex scenes, our method achieves up to a twofold reduction of build times while providing up to 17 percent faster trace times compared with the state-of-the-art methods.",
        "author": "Meister, Daniel and Bittner, Ji\u0159\u00ed",
        "doi": "10.1109/TVCG.2017.2669983",
        "journal": "IEEE Transactions on Visualization and Computer Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, CUDA, Bottom-Up Construction, Surface Area Heuristics, Acceleration Structures, Tree Data Structures",
        "number": "12",
        "pages": "1345-1353",
        "publisher": "IEEE",
        "series": "TVCG",
        "title": "Parallel Locally-Ordered Clustering for Bounding Volume Hierarchy Construction",
        "type": "ARTICLE",
        "url": "https://doi.org/10.1145/2492045.2492054",
        "volume": "24",
        "year": "2018"
    },
    "7903616": {
        "abstract": "The ever-increasing demands of computer graphics applications have motivated the evolution of computer graphics hardware over the last 20 years. Early commodity graphics hardware was largely based on fixed-function components offering little flexibility. The gradual replacement of fixed-function hardware with more general-purpose instruction processors, has enabled GPUs to deliver visual experiences more tailored to specific applications. This trend has culminated in modern GPUs essentially being programmable stream processors, capable of supporting a wide variety of applications in and outside of computer graphics. However, the growing concern of power efficiency in modern processors, coupled with an increasing demand for supporting next-generation graphics pipelines, has re-invigorated the debate on the use of fixed-function accelerators in these platforms. In this paper, we conduct a study of a heterogeneous, system-on-chip solution for the construction of a highly important data structure for computer graphics: the bounding volume hierarchy. This design incorporates conventional CPU cores alongside a fixed-function accelerator prototyped on a reconfigurable logic fabric. Our study supports earlier, simulation-only studies which argue for the introduction of this class of accelerator in future graphics processors.",
        "author": "Doyle, Michael J. and Tuohy, Ciar\u00e1n and Manzke, Michael",
        "doi": "10.1109/TMSCS.2017.2695338",
        "journal": "IEEE Transactions on Multi-Scale Computing Systems",
        "keywords": "type: Hardware Optimization, type: Hardware, type: Off-line, GPU, Acceleration Structures, Acceleration Architectures",
        "number": "31",
        "pages": "83-94",
        "publisher": "IEEE",
        "series": "TMSCS",
        "title": "Evaluation of a BVH Construction Accelerator Architecture for High-Quality Visualization",
        "type": "ARTICLE",
        "url": "https://ieeexplore.ieee.org/document/7903616",
        "volume": "4",
        "year": "2018"
    },
    "Aila2013": {
        "abstract": "The surface area heuristic (SAH) is widely used as a predictor for ray tracing performance, and as a heuristic to guide the construction of spatial acceleration structures. We investigate how well SAH actually predicts ray tracing performance of a bounding volume hierarchy (BVH), observe that this relationship is far from perfect, and then propose two new metrics that together with SAH almost completely explain the measured performance. Our observations shed light on the increasingly common situation that a supposedly good tree construction algorithm produces trees that are slower to trace than expected. We also note that the trees constructed using greedy top-down algorithms are consistently faster to trace than SAH indicates and are also more SIMD-friendly than competing approaches.",
        "author": "Aila, Timo and Karras, Tero and Laine, Samuli",
        "doi": "10.1145/2492045.2492056",
        "journal": "HPG '13: Proceedings of the 5th High-Performance Graphics Conference",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures",
        "number": "03",
        "pages": "101-107",
        "publisher": "Association for Computing Machinery",
        "series": "PHPG",
        "title": "On quality metrics of bounding volume hierarchies",
        "type": "article",
        "url": "https://dl.acm.org/doi/10.1145/2492045.2492056",
        "volume": "",
        "year": "2013"
    },
    "Apetrei2014FastAS": {
        "abstract": "This paper continues the long-standing tradition of gradually improving the construction speed of spatial acceleration structures using sorted Morton codes. Previous work on this topic forms a clear sequence where each new paper sheds more light on the nature of the problem and improves the hierarchy generation phase in terms of performance, simplicity, parallelism and generality. Previous approaches constructed the tree by firstly generating the hierarchy and then calculating the bounding boxes of each node by using a bottom-up traversal. Continuing the work, we present an improvement by providing a bottom-up method that finds each node's parent while assigning bounding boxes, thus constructing the tree in linear time in a single kernel launch. Also, our method allows clustering the sorted points using an user-defined distance metric function.",
        "author": "Ciprian Apetrei",
        "doi": "10.2312/cgvc.20141206",
        "journal": "Computer Graphics and Visual Computing (CGVC)",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures, LBVH",
        "number": "19",
        "pages": "",
        "publisher": "Association for Computing Machinery",
        "series": "CGVC",
        "title": "Fast and Simple Agglomerative LBVH Construction",
        "type": "inproceedings",
        "url": "http://dx.doi.org/10.2312/cgvc.20141206",
        "volume": "",
        "year": "2014"
    },
    "Bittner2013FastIO": {
        "abstract": "We present an algorithm for fast optimization of bounding volume hierarchies (BVH) for efficient ray tracing. We perform selective updates of the hierarchy driven by the cost model derived from the surface area heuristic. In each step the algorithm updates a fraction of the hierarchy nodes in order to minimize the overall hierarchy cost. The updates are realized by simple operations on the tree nodes: removal, search, and insertion. Our method can quickly reduce the cost of the hierarchy constructed by the traditional techniques such as the surface area heuristic. We evaluate the properties of the proposed method on fourteen test scenes of different complexity including individual objects and architectural scenes. The results show that our method can improve a BVH initially constructed with the surface area heuristic by up to 27 percent and a BVH constructed with the spatial median split by up to 88 percent.",
        "author": "Bittner, J. and Hapala, Michal and Havran, Vlastimil",
        "doi": "10.1111/cgf.12000",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Bottom-Up Construction, Acceleration Structures, Surface Area Heuristics",
        "number": "15",
        "pages": "",
        "publisher": "Pergamon Press, Inc.",
        "series": "CGF",
        "title": "Fast Insertion-Based Optimization of Bounding Volume Hierarchies",
        "type": "article",
        "url": "https://api.semanticscholar.org/CorpusID:1434695",
        "volume": "32",
        "year": "2013"
    },
    "Chitalu2020BinaryOT": {
        "abstract": "We present a simple, efficient and low-memory technique, targeting fast construction of bounding volume hierarchies (BVH) for broad-phase collision detection. To achieve this, we devise a novel representation of BVH trees in memory. We develop a mapping of the implicit index representation to compact memory locations, based on simple bit-shifts, to then construct and evaluate bounding volume test trees (BVTT) during collision detection with real-time performance. We model the topology of the BVH tree implicitly as binary encodings which allows us to determine the nodes missing from a complete binary tree using the binary representation of the number of missing nodes. The simplicity of our technique allows for fast hierarchy construction achieving over 6x speedup over the state-of-the-art. Making use of these characteristics, we show that not only it is feasible to rebuild the BVH at every frame, but that using our technique, it is actually faster than refitting and more memory efficient.",
        "author": "Chitalu, Floyd and Dubach, Christophe and Komura, Taku",
        "doi": "10.1111/cgf.13948",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Acceleration Structures",
        "number": "20",
        "pages": "",
        "publisher": "Pergamon Press, Inc.",
        "series": "CGF",
        "title": "Binary Ostensibly-Implicit Trees for Fast Collision Detection",
        "type": "article",
        "url": "https://api.semanticscholar.org/CorpusID:221580254",
        "volume": "39",
        "year": "2020"
    },
    "Garanzha2011": {
        "abstract": "We present an efficient algorithm for building an adaptive bounding volume hierarchy (BVH) in linear time on commodity graphics hardware using CUDA. BVHs are widely used as an acceleration data structure to quickly ray trace animated polygonal scenes. We accelerate the construction process with auxiliary grids that help us build high quality BVHs with SAH in O(k * n). We partition scene triangles and build a temporary grid structure only once. We also handle non-uniformly tessellated and long/thin triangles that we split into several triangle references with tight bounding box approximations. We make no assumptions on the type of geometry or animation motion. However, our algorithm takes advantage of coherent geometry layout and coherent frame-by-frame motion. We demonstrate the performance and quality of resulting BVHs that are built quickly with good spatial partitioning.",
        "author": "Garanzha, Kirill and Premo\\v{z}e, Simon and Bely, Alexander and Galaktionov, Vladimir",
        "doi": "10.1007/s00371-011-0593-8",
        "journal": "The Visual Computer: International Journal of Computer Graphics",
        "keywords": "type: Computational Optimization, type: Hardware, CUDA, Surface Area Heuristics, Acceleration Structures",
        "number": "08",
        "pages": "697-706",
        "publisher": "Springer-Verlag",
        "series": "VISC",
        "title": "Grid-Based SAH BVH Construction on a GPU",
        "type": "article",
        "url": "https://doi.org/10.1007/s00371-011-0593-8",
        "volume": "27",
        "year": "2011"
    },
    "Hendrich2017": {
        "abstract": "We propose a novel algorithm for construction of bounding volume hierarchies BVHs for multi-core CPU architectures. The algorithm constructs the BVH by a divisive top-down approach using a progressively refined cut of an existing auxiliary BVH. We propose a new strategy for refining the cut that significantly reduces the workload of individual steps of BVH construction. Additionally, we propose a new method for integrating spatial splits into the BVH construction algorithm. The auxiliary BVH is constructed using a very fast method such as LBVH based on Morton codes. We show that the method provides a very good trade-off between the build time and ray tracing performance. We evaluated the method within the Embree ray tracing framework and show that it compares favorably with the Embree BVH builders regarding build time while maintaining comparable ray tracing speed.",
        "author": "Hendrich, J. and Meister, D. and Bittner, Ji\u0159\u00ed",
        "doi": "https://doi.org/10.1111/cgf.13143",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Software, Top-Down Construction, LBVH, Acceleration Structures",
        "number": "05",
        "pages": "487-494",
        "publisher": "Association for Computing Machinery",
        "series": "CGF",
        "title": "Parallel BVH Construction using Progressive Hierarchical Refinement",
        "type": "article",
        "url": "https://dl.acm.org/doi/10.1111/cgf.13143",
        "volume": "36",
        "year": "2017"
    },
    "Hunt2007": {
        "abstract": "In this paper we show how to use structural information about a scene such as is contained in a scene graph to build SAH-based acceleration structures more efficiently. We provide a general method for doing so together with asymptotic analyses for both standard and lazy variants of our method. In particular, we show bounds of O(n) for full k-d tree builds over n primitives and O(v + logn) for lazy k-d tree builds over v visible primitives. We provide experimental results showing that these asymptotic properties translate into real-world speedups. In fact, without a method like ours, it is impossible to achieve better than O(n) for even the first split of a lazy build. We also show that under certain (realistic) assumptions on the scene structure, our method produces provably good acceleration structures. Finally, we provide experimental results demonstrating that our acceleration structures are of nearly indistinguishable quality to those produced with a full SAH build.",
        "author": "Hunt, Warren and Mark, William and Fussell, Donald",
        "doi": "10.1109/RT.2007.4342590",
        "journal": "RT '07: Proceedings of the 2007 IEEE Symposium on Interactive Ray Tracing",
        "keywords": "type: Computational Optimization, type: Software, Bottom-Up Construction, Surface Area Heuristics, GPU",
        "number": "06",
        "pages": "47-54",
        "publisher": "IEEE Computer Society",
        "series": "SIRT",
        "title": "Fast and Lazy Build of Acceleration Structures from Scene Hierarchies",
        "type": "article",
        "url": "https://dl.acm.org/doi/10.1109/RT.2007.4342590",
        "volume": "36",
        "year": "2007"
    },
    "Lauterbach2009": {
        "abstract": "We present two novel parallel algorithms for rapidly constructing bounding volume hierarchies on manycore GPUs. The first uses a linear ordering derived from spatial Morton codes to build hierarchies extremely quickly and with high parallel scalability. The second is a top-down approach that uses the surface area heuristic (SAH) to build hierarchies optimized for fast ray tracing. Both algorithms are combined into a hybrid algorithm that removes existing bottlenecks in the algorithm for GPU construction performance and scalability leading to significantly decreased build time. The resulting hierarchies are close in to optimized SAH hierarchies, but the construction process is substantially faster, leading to a significant net benefit when both construction and traversal cost are accounted for. Our preliminary results show that current GPU architectures can compete with CPU implementations of hierarchy construction running on multicore systems. In practice, we can construct hierarchies of models with up to several million triangles and use them for fast ray tracing or other applications.",
        "author": "Lauterbach, C. and Garland, M. and Sengupta, S. and Luebke, D. and Manocha, D",
        "doi": "10.1111/j.1467-8659.2009.01377.x",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Software, Top-Down Construction, Surface Area Heuristics, GPU, Parallelism",
        "number": "07",
        "pages": "101-107",
        "publisher": "The Eurographics Association and Blackwell Publishing Ltd",
        "series": "CGF",
        "title": "Fast BVH Construction on GPUs",
        "type": "article",
        "url": "https://diglib.eg.org/handle/10.2312/CGF.v28i2pp375-384",
        "volume": "",
        "year": "2009"
    },
    "Meister2016": {
        "abstract": "We propose a novel method for fast parallel construction of bounding volume hierarchies (BVH) on the GPU. Our method is based on a combination of divisible and agglomerative clustering. We use the k-means algorithm to subdivide scene primitives into clusters. From these clusters, we construct treelets using the agglomerative clustering algorithm. Applying this procedure recursively, we construct the entire bounding volume hierarchy. We implemented the method using parallel programming concepts on the GPU. The results show the versatility of the method: it can be used to construct medium-quality hierarchies very quickly, but also it can be used to construct high-quality hierarchies given a slightly longer computational time. We evaluate the method in the context of GPU ray tracing and show that it provides results comparable with other state-of-the-art GPU techniques for BVH construction. We also believe that our approach based on the k-means algorithm gives a new insight into how bounding volume hierarchies can be constructed.",
        "author": "Garanzha, Kirill and Premo\\v{z}e, Simon and Bely, Alexander and Galaktionov, Vladimir",
        "doi": "10.1007/s00371-016-1241-0",
        "journal": "The Visual Computer: International Journal of Computer Graphics",
        "keywords": "type: Computational Optimization, type: Software, Top-Down Construction, Surface Area Heuristics, GPU, Parallelism",
        "number": "09",
        "pages": "6-8",
        "publisher": "Springer-Verlag",
        "series": "VISC",
        "title": "Parallel BVH construction using k-means clustering",
        "type": "article",
        "url": "https://www.researchgate.net/publication/302485723_Parallel_BVH_construction_using_k-means_clustering",
        "volume": "32",
        "year": "2016"
    },
    "Popov2009": {
        "abstract": "A major factor for the efficiency of ray tracing is the use of good acceleration structures. Recently, bounding volume hierarchies (BVHs) have become the preferred acceleration structures, due to their competitive performance and greater flexibility compared to KD trees. In this paper, we present a study on algorithms for the construction of optimal BVHs. Due to the exponential nature of the problem, constructing optimal BVHs for ray tracing remains an open topic. By exploiting the lin- earity of the surface area heuristic (SAH), we develop an algorithm that can find optimal partitions in polynomial time. We further generalize this algorithm and show that every SAH-based KD tree or BVH construction algorithm is a special case of the generic algorithm. Based on a number of experiments with the generic algorithm, we conclude that the assumption of non-terminating rays in the surface area cost model becomes a major obstacle for using the full potential of BVHs. We also observe that enforcing space subdivision helps to improve BVH performance. Finally, we develop a simple space partitioning algorithm for building efficient BVHs.",
        "author": "Popov, Stefan and Georgiev, Iliyan and Dimov, Rossen and Slusallek, Philipp",
        "doi": "10.1145/1572769",
        "journal": "HPG '09: Proceedings of the Conference on High Performance Graphics 2009",
        "keywords": "type: Computational Optimization, type: Software, kd-Trees, Surface Area Heuristics",
        "number": "02",
        "pages": "15-22",
        "publisher": "Association for Computing Machinery",
        "series": "PCHPG",
        "title": "Object partitioning considered harmful: space subdivision for BVHs",
        "type": "article",
        "url": "https://publikationen.sulb.uni-saarland.de/bitstream/20.500.11880/26033/1/Popov_et_al._Object_Partitioning_Considered_Harmful.pdf",
        "volume": "",
        "year": "2009"
    },
    "Vinkler2012": {
        "abstract": "We present the first parallel on-demand spatial hierarchy construction algorithm targeting ray tracing on many-core processors such as GPUs. The method performs simultaneous ray traversal and spatial hierarchy construction focused on the parts of the data structure being traversed. The method is based on a versatile framework built around a task pool and runs entirely on the GPU. We show that the on-demand construction can improve rendering times compared to full hierarchy construction. We evaluate our method on both object (BVH) and space (kd-tree) subdivision data structures and compare them mutually. The on-demand method is particularly beneficial for rendering large scenes with high occlusion. We also present SAH kd-tree builder that outperforms previous state-of-the-art builders running on the GPU.",
        "author": "Wodniok, Dominik and Goesele, Michael",
        "doi": "",
        "journal": "GI '16: Proceedings of the 42nd Graphics Interface Conference",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Top-Down Construction, Surface Area Heuristics",
        "number": "06",
        "pages": "101-107",
        "publisher": "Canadian Human-Computer Communications Society",
        "series": "PGIC",
        "title": "Recursive SAH-based Bounding Volume Hierarchy Construction",
        "type": "article",
        "url": "https://dl.acm.org/doi/10.5555/3076132.3076153",
        "volume": "",
        "year": "2016"
    },
    "Wald2007": {
        "abstract": "With ray traversal performance reaching the point where real-time ray tracing becomes practical, ray tracing research is now shifting away from faster traversal, and towards the question what has to be done to use it in truly interactive applications such as games. Such applications are problematic because when geometry changes every frame, the ray tracer's internal index data structures are no longer valid. Fully rebuilding all data structures every frame is the most general approach to handling changing geometry, but was long considered impractical except for grid-based grid based ray tracers, trivial scenes, or reduced quality of the index structure. In this paper, we investigate how some of the fast, approximate construction techniques that have recently been proposed for kd-trees can also be applied to bounding volume hierarchies (BVHs). We argue that these work even better for BVHs than they do for kd-trees, and demonstrate that when using those techniques, BVHs can be rebuilt up to 10x faster than competing kd-tree based techniques.",
        "author": "Wald, Ingo",
        "doi": "10.1109/RT.2007.4342588",
        "journal": "2007 IEEE Symposium on Interactive Ray Tracing",
        "keywords": "type: Computational Optimization, type: Software, type: Real-time, Top-Down Construction, Surface Area Heuristics, kd-Trees",
        "number": "01",
        "pages": "33-40",
        "publisher": "IEEE",
        "series": "SIRT",
        "title": "On fast Construction of SAH-based Bounding Volume Hierarchies",
        "type": "article",
        "url": "https://ieeexplore.ieee.org/document/4342588/keywords#keywords",
        "volume": "",
        "year": "2007"
    },
    "Wald2012": {
        "abstract": "We investigate how to efficiently build bounding volume hierarchies (BVHs) with surface area heuristic (SAH) on the Intel Many Integrated Core (MIC) Architecture. To achieve maximum performance, we use four key concepts: progressive 10-bit quantization to reduce cache footprint with negligible loss in BVH quality; an AoSoA data layout that allows efficient streaming and SIMD processing; high-performance SIMD kernels for binning and partitioning; and a parallelization framework with several build-specific optimizations. The resulting system is more than an order of magnitude faster than today's high-end GPU builders for comparable BVHs; it is usually faster even than spatial median builders; it can build SAH BVHs almost as fast as existing GPUs and CPUs- and CPU-based approaches can build regular grids; and in aggregate \"build+render\u201d performance is significantly faster than the best published numbers for either of these systems, be it CPU or GPU, BVH, kd-tree, or grid.",
        "author": "Wald, Ingo",
        "doi": "10.1109/TVCG.2010.251",
        "journal": "IEEE Transactions on Visualization and Computer Graphics",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, MIC, Surface Area Heuristics, kd-Trees",
        "number": "04",
        "pages": "47-57",
        "publisher": "IEEE Educational Activities Department",
        "series": "TVCG",
        "title": "Fast Construction of SAH BVHs on the Intel Many Integrated Core (MIC) Architecture",
        "type": "article",
        "url": "http://www.sci.utah.edu/~wald/Publications/2012/MICBVH/LRB-BVH.pdf",
        "volume": "18",
        "year": "2012"
    },
    "Wodniok2016": {
        "abstract": "Advances in research on quality metrics for bounding volume hierarchies (BVHs) have shown that greedy top-down SAH builders construct BVHs with superior traversal performance despite the fact that the resulting SAH values are higher than those created by more sophisticated builders. Motivated by this observation we examine a construction algorithm that uses recursive SAH values of temporarily constructed SAH-built BVHs to guide the construction. The resulting BVHs achieve up to 28\\%\\ better trace performance for primary rays and up to 24\\%\\ better trace performance for secondary diffuse rays compared to standard plane sweeping without applying spatial splits. Allowing spatial splits we still achieve up to 20\\%\\ resp. 19\\%\\ better performance. While our approach is not suitable for real-time BVH construction, we show that the proposed algorithm has subquadratic computational complexity in the number of primitives, which renders it usable in practical applications.",
        "author": "Wodniok, Dominik and Goesele, Michael",
        "doi": "",
        "journal": "GI '16: Proceedings of the 42nd Graphics Interface Conference",
        "keywords": "type: Computational Optimization, type: Software, type: Off-line, Surface Area Heuristics, kd-Trees",
        "number": "06",
        "pages": "101-107",
        "publisher": "Canadian Human-Computer Communications Society",
        "series": "PGIC",
        "title": "Recursive SAH-based Bounding Volume Hierarchy Construction",
        "type": "article",
        "url": "https://dl.acm.org/doi/10.5555/3076132.3076153",
        "volume": "",
        "year": "2016"
    },
    "https://doi.org/10.1111/cgf.13376": {
        "abstract": "We present a novel highly parallel method for optimizing bounding volume hierarchies (BVH) targeting contemporary GPU architectures. The core of our method is based on the insertion-based BVH optimization that is known to achieve excellent results in terms of the SAH cost. The original algorithm is, however, inherently sequential: no efficient parallel version of the method exists, which limits its practical utility. We reformulate the algorithm while exploiting the observation that there is no need to remove the nodes from the BVH prior to finding their optimized positions in the tree. We can search for the optimized positions for all nodes in parallel while simultaneously tracking the corresponding SAH cost reduction. We update in parallel all nodes for which better position was found while efficiently handling potential conflicts during these updates. We implemented our algorithm in CUDA and evaluated the resulting BVH in the context of the GPU ray tracing. The results indicate that the method is able to achieve the best ray traversal performance among the state of the art GPU-based BVH construction methods.",
        "author": "Bittner, J. and Meister, D.",
        "doi": "10.1111/cgf.13376",
        "journal": "Computer Graphics Forum",
        "keywords": "type: Computational Optimization, type: Software, Bottom-Up Construction, Surface Area Heuristics, CUDA, GPU",
        "number": "24",
        "pages": "463-473",
        "publisher": "The Eurographs Association & John Wiley & Sons, Ltd.",
        "series": "SIRT",
        "title": "Parallel Reinsertion for Bounding Volume Hierarchy Optimization",
        "type": "article",
        "url": "https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13376",
        "volume": "37",
        "year": "2018"
    }
}});